name: Build & Publish Base Images

on:
  workflow_dispatch:

jobs:
  fetch-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    outputs:
      aspnet_digest: ${{ steps.push_aspnet.outputs.digest }}
      sdk_digest: ${{ steps.push_sdk.outputs.digest }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to GitHub Docker registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Fetch base images
      run: |
        docker pull mcr.microsoft.com/dotnet/aspnet:8.0
        docker pull mcr.microsoft.com/dotnet/sdk:8.0

    - name: Tag and push ASP.NET base image
      id: push_aspnet
      run: |
        docker tag mcr.microsoft.com/dotnet/aspnet:8.0 ghcr.io/ipsimple/aspnet:8.0
        docker push ghcr.io/ipsimple/aspnet:8.0
        echo "::set-output name=digest::$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/ipsimple/aspnet:8.0 | cut -d'@' -f2)"

    - name: Tag and push SDK base image
      id: push_sdk
      run: |
        docker tag mcr.microsoft.com/dotnet/sdk:8.0 ghcr.io/ipsimple/sdk:8.0
        docker push ghcr.io/ipsimple/sdk:8.0
        echo "::set-output name=digest::$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/ipsimple/sdk:8.0 | cut -d'@' -f2)"

  scan-aspnet-image:
    runs-on: ubuntu-latest
    needs: fetch-and-push
    steps:
    - name: Scan ASP.NET base image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ghcr.io/ipsimple/aspnet:8.0
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  scan-sdk-image:
    runs-on: ubuntu-latest
    needs: fetch-and-push
    steps:
    - name: Scan SDK base image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ghcr.io/ipsimple/sdk:8.0
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  generate-sbom:
    runs-on: ubuntu-latest
    needs: [fetch-and-push]
    steps:
    - name: Install Syft
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

    - name: Generate SBOM for ASP.NET
      run: |
        syft packages docker:ghcr.io/ipsimple/aspnet:8.0 -o syft-json > sbom-aspnet.json

    - name: Generate SBOM for SDK
      run: |
        syft packages docker:ghcr.io/ipsimple/sdk:8.0 -o syft-json > sbom-sdk.json

    - name: Upload SBOM for ASP.NET
      uses: actions/upload-artifact@v2
      with:
        name: sbom-aspnet
        path: sbom-aspnet.json

    - name: Upload SBOM for SDK
      uses: actions/upload-artifact@v2
      with:
        name: sbom-sdk
        path: sbom-sdk.json

  generate-attestations:
    runs-on: ubuntu-latest
    needs: [fetch-and-push, generate-sbom]

    permissions:
      id-token: write
      contents: read
      packages: write
      attestations: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to GitHub Docker registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate artifact attestation for ASP.NET
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/ipsimple/aspnet
        subject-digest: ${{ needs.fetch-and-push.outputs.aspnet_digest }}
        push-to-registry: true

    - name: Generate artifact attestation for SDK
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/ipsimple/sdk
        subject-digest: ${{ needs.fetch-and-push.outputs.sdk_digest }}
        push-to-registry: true

    - name: Generate SBOM attestation for ASP.NET
      uses: actions/attest-sbom@v1
      with:
        subject-name: ghcr.io/ipsimple/aspnet
        subject-digest: ${{ needs.fetch-and-push.outputs.aspnet_digest }}
        sbom-path: sbom-aspnet.json
        push-to-registry: true

    - name: Generate SBOM attestation for SDK
      uses: actions/attest-sbom@v1
      with:
        subject-name: ghcr.io/ipsimple/sdk
        subject-digest: ${{ needs.fetch-and-push.outputs.sdk_digest }}
        sbom-path: sbom-sdk.json
        push-to-registry: true
