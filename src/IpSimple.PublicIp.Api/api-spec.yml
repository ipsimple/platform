openapi: 3.0.0
info:
  title: IpSimple.org Public IP Retrieval API
  description: This API allows clients to retrieve their own public IPv4 and IPv6 addresses. It's a simple and effective tool for a clients public IP address detection and troubleshooting network issues.
  version: 1.0.0
  termsOfService: 'https://ipsimple.org/terms/'
  contact:
    email: 'support@ipsimple.org'
paths:
  /ipv4:
    get:
      summary: Public IPv4 address
      description: This endpoint returns the public IPv4 address of the client making the request.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum: [json, plain]
          required: false
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                example: "98.207.254.136"
            application/json:
              schema:
                type: object
                properties:
                  ip:
                    type: string
                    example: "98.207.254.136"
        '429':
          description: Too many requests
  /ipv4/all:
    get:
      summary: All Public IPv4 addresses
      description: This endpoint returns all public IPv4 addresses from the X-Forwarded-For header.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum: [json, plain]
          required: false
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                example: "98.207.254.136, 203.0.113.195"
            application/json:
              schema:
                type: object
                properties:
                  ips:
                    type: array
                    items:
                      type: string
                    example: ["98.207.254.136", "203.0.113.195"]
        '429':
          description: Too many requests
  /ipv6:
    get:
      summary: Public IPv6 address
      description: This endpoint returns the public IPv6 address of the client making the request.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum: [json, plain]
          required: false
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                example: "2a00:1450:400f:80d::200e"
            application/json:
              schema:
                type: object
                properties:
                  ip:
                    type: string
                    example: "2a00:1450:400f:80d::200e"
        '429':
          description: Too many requests
  /ipv6/all:
    get:
      summary: All Public IPv6 addresses
      description: This endpoint returns all public IPv6 addresses from the X-Forwarded-For header.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum: [json, plain]
          required: false
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                example: "2a00:1450:400f:80d::200e, 2a00:1450:400f:80d::200f"
            application/json:
              schema:
                type: object
                properties:
                  ips:
                    type: array
                    items:
                      type: string
                    example: ["2a00:1450:400f:80d::200e", "2a00:1450:400f:80d::200f"]
        '429':
          description: Too many requests
  /all:
    get:
      summary: Dual stack IP addresses
      description: Returns both IPv4 and IPv6 addresses if available.
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum: [json, plain]
          required: false
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                example: "203.0.113.1, 2001:db8::1"
            application/json:
              schema:
                type: object
                properties:
                  ipv4:
                    type: string
                    example: "203.0.113.1"
                  ipv6:
                    type: string
                    example: "2001:db8::1"
        '429':
          description: Too many requests
  /geolocation:
    get:
      summary: Geolocation for client IP
      description: Returns geolocation metadata for the calling client.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
              example: {"message": "Geolocation lookup not yet implemented"}
  /geolocation/{ipAddress}:
    get:
      summary: Geolocation lookup
      description: Provides geolocation metadata for a specific IP address.
      parameters:
        - in: path
          name: ipAddress
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
              example: {"message": "Geolocation lookup not yet implemented"}
  /bulk:
    post:
      summary: Submit bulk IP processing
      description: Accepts a list of IP addresses for asynchronous processing.
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
              example: {"message": "Bulk IP processing not yet implemented"}
  /bulk/{jobId}:
    get:
      summary: Bulk job status
      description: Retrieves processing status for a submitted bulk IP job.
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
              example: {"jobId": "bulk-123", "status": "pending"}
  /bulk/{jobId}/results:
    get:
      summary: Bulk job results
      description: Gets processed results for a completed bulk IP job.
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
              example: {"jobId": "bulk-123", "results": []}
